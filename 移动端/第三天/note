1.响应式开发的由来及概念
 概念：自动识别屏幕的宽度并作出相应调整的网页设计（responsive web design）
 说白了，就是指制作一套页面，根据设备的特性（例如屏幕宽度，设备像素比等）做出相应的调整，从而在各个设备上都能有最佳的视觉效果，对用户来说有较好的浏览体验
 响应式开发的理念由流式布局，弹性图片，媒体查询等相关技术来是现实

 2.响应式开发的种类
 1.PC端和移动端共用一套页面，适合小型的站点或专题页
 2.PC端和移动端各做一套，适合大型的站点 ，在移动设备上都能呈现最佳视觉效,这称之为移动适配

 3.响应式开发的实现
 把响应式开发分成四大规则
 规则一：设置viewport (视口)
  早期为了解决PC端页面在移动设备上显示的问题，所有的页面按照980的宽度渲染，这个980指的就是layout viewport 布局视口的宽度，如果需要查看完整的页面时，需要左右移动页面来查看，这样用户体验较差,所以早期时让整个页面缩放到的设备的宽度 缩放值 = 设备的宽度/980

  缺点：页面内容缩小，看不清楚，根本没法看
  有留出接口，让我自己设置视口
 <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"/>

width 指layout viewport   width=device-width 把布局视口的宽度设置成设备的宽度 这样话页面就按照各个设备的宽度渲染 达到了理想状态
user-scalable 是否允许用户缩放页面 no禁止 yes允许
initial-scale 初始缩放值
maximum-scale 最大缩放值
minimum-scale 最小缩放值
概念抽象，设置简单

规则二：页面布局不使用绝对宽度
是对度量单位的选择
常见的度量单位：px（固定单位）百分比（%） em(相对于父标签的字体大小)  rem（相对于根元素的字体大小）
流式布局是通常情况下用百分比来布局
弹性布局：flexbox布局

规则三：引入媒体查询
概念：在不同条件下使用不同的样式，使页面达到不同的渲染效果
@media only screen and (媒体条件){
    //css样式
}
type:all |screen |print... 设备类型
设备特性
width 窗口显示区域的宽度
device-width 设备的宽度
在手机横向时，width和device-width不一样，width变成了设备高度的值，device-width不发生改变

设备像素比 device pixel ratio (dpr)
物理像素 显示器最小的物理显示单位 移动设备自已的单位（dp）
设备独立像素（css像素）通过相关的系统可以转化成物理像素，物理像素和设备独立像素之间存在着一定关系，这个关系就是设备像素比（dpr）
设备像素比 = 物理像素/设备独立像素 （在x轴方向上或y轴方向上）

移动页面时会给你个设计稿（640|750）
为了处理图片，让图片在屏幕上高清显示,图片所需要的像素点数是和物理像素是一样的
如果做的非常细，得你三套设计稿 375 (dpr = 1),750(dpr=2), 1125(dpr = 3)
dpr=1 background-images:url(1x.png)   也就是在375宽度的设计稿下切下来
dpr=2 background-images:url(2x.png)   也就是在750宽度的设计稿下切下来
dpr=3 background-images:url(2x.png)   也就是在1125宽度的设计稿下切下来

规则四：弹性图片
 第一种利用max-width来控制图片的大小
 max-width:100px; 图片最大宽度是100px,如果图片的宽度大于100px，则显示成100px,如果小于100px，则显示成自身的大小
 第二种利用dpr分别设置不同倍数的图片


 首先找到主断点，断点的设定是追随内容的，是由设计师决定的
 可能页面上还会有一些次断点，主要根据内容会做些微调

 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 css预处理器LESS
 1.为什么会出现CSS预处理器？
 CSS有弊端，css入门门槛低，如果不是精通CSS,css代码没有好的组织结构,也会提高维护的成本，CSS中权重问题也非常头疼 ，由于CSS不是编程语言导致的，没有变量，函数，作用域和命名空间的，没法合理复用和维护代码
 less在是CSS语法的基础上增加了一些语法，比如变量，函数，嵌套，混合，作用域，命名空间，匹配模式，运算符等，less就像它的名称一样，可以用最少的代码做更多的事情
 2.LESS的使用
 http://www.zhufengpeixun.com/qianduanjishuziliao/CSS3heHTML5zhuanti/2016-07-22/527.html
 http://www.zhufengpeixun.com/qianduanjishuziliao/CSS3heHTML5zhuanti/2016-07-22/528.html
  http://less.bootcss.com/
  less自带一套语法和解析器，浏览器没法直接解析less代码，需要依赖Less解析器，将Less代码编译成CSS代码
  客户端解析 依赖一个js文件，可以将LESS代码解析成CSS代码
  服务端解析 node的包管理器（npm）去安装less这个模块，然后再解析


