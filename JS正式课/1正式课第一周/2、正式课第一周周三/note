1）、常用的命名规范：
    axxxx:aBtn   说明获取的是一组元素
    oxxxx:oBtn   说明获取的是一个元素--》对象
                 对象有两个重要的特点：属性 和 方法
                 属性和方法的区别：属性没括号  方法有括号
    bxxxx:bOk    代表布尔值true、false
    reg/re:      代表正则
    str:         字符串
    aty/arr/array:数组

    关于this的用法：
    1、当元素身上的事件被触发的时候，会执行一个函数，函数中的this，指向当前这个元素
    2、函数被调用的时候，看前面时候有点，点前面是谁，this就是谁；如果没有点，默认是window
    3、自执行函数中的this都是window；

3）、内存和内存释放：
内存主要包含：堆内存和栈内存
栈内存：全局作用域和私有作用域；
       作用：提供了一个供JS代码执行的环境；里面放的是基本数据类型的数据；
堆内存：作用：就是用来存放数据的，
       对象数据类型：存放的是属性名和属性值
       函数数据类型：把函数体中的所有JS代码，作为字符串放在堆内存中。
内存释放：
       堆内存的释放:  让变量指向空指针；
       var obj={key:value];obj=null
       栈内存的释放：
            全局作用域：形成：当浏览器加载完页面的时候，会形成一个供JS代码执行的全局作用域：
                      释放：关闭页面；
            私有作用域：形成：函数被调用的时候
            一般情况下，当函数执行完成的时候，都会默认进行释放，但是两种特殊情况除外；
                1）、不释放：当函数体中的任何东西，被外面的变量或者其他东西占用的时候，该函数不释放
                2）、不立即释放：当函数执行完成的时候，返回一个需要执行的函数；需要等待所有的函数都执行完的时候，该函数才释放
4）、上级作用域：跟函数在哪里调用无关，只跟该函数对应的堆内存在哪里开辟有关；



i=13;++i:先++,再运算  i++;先运算,在++;再++的时候，只是自身的增加，跟运算无关。




