1.用伪类清楚浮动的方法：
    display: block;
    content: '';
    clear: both;
2.同步和异步：
同步：当前的任务没做完， 不会开始下一项任务；
    JS中大多都是同步：比如：for循环 while循环
异步：当前任务没做完，不会等待当前任务，继续开始执行下一项任务，等所有的任务都执行完成，再返回头看之前的任务是否准备好，如果准备好就开始执行；
JS中的异步：
1）事件 oDiv.onclick=fn;
2）定时器
3）ajax
4) 回调函数 sort(function(a,b){return a-b}) forEach()....
3.单张图片的延迟加载：
1）所有的事件，必须在系统滚轮事件下发生
2）在页面布局的时候，不应该让图片显示，我们显示的是默认的占位符，把图片真正的地址保存在元素的自定义属性上；
3）当满足条件的时候，让图片显示：
    条件：图片自身的高度+到body顶部的距离<scrollTop+clientHeight
    显示需要：
        1）创建临时图片，并给其src赋值realImg上保存的图片地址；
        2）校验图片地址是否正确；
        3）onload成功，onerror失败
        4）校验完成：给真正的图片元素赋值正确的地址
        5）性能优化：1）释放临时图片内存 2）避免重复加载；
4.跑马灯的思路：
    核心：通过定时器，改变ul元素的left值；
    1.ul中的内容复制一份，折行-》改变ul的宽度 2.定时器改变left，当left<-w/2,把ul迅速拉回到left:0;

.............私活网站：实现网；
任务：
    1.多张图片延迟加载
    2.图片跑马灯
。。。。。。。。。。。。。。。
整理笔记：
1）获取上一个哥哥元素
2）forEach封装 map封装
3）获取四个不重复的随机验证码
5) 99乘法表
6）选项卡
7）判断是否为公有属性
8）求平均值
9）求最大值和最小值
10）倒计时
11）getChildren;
12)任意参数求和
13）点击自增；
14）类数组转数组
15）数据解析
16）隔行换色的表格排序
17) 求出现次数最多的单词，及出现的次数：两种思路1）对象不重名的特性 2）重复子项；
18）有效数字的规则；  18-65岁的正则；  去除首尾空格的正则；
19）日期格式化的封装
20）键值对的封装；
21）getCss
22)win
23)offset
24)图片跑马灯
25)多张图片延迟加载；














