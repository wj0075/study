周啸天
QQ:1282347298
TEL:13041086186
以后有问题都可以找我

1、学习建议：
   ->回去后做笔记:每天睡前小看一下
   ->做项目:
       模拟别人的PC站[HTML+CSS]:快、优


2、职业规划
   ->培养自己的文字总结能力，提高自己在这个圈子中的名气
     =>写自己的博客或者搭建自己的主页


3、做完博客后如何把它发布出去,以后别人输入一个域名,就可以访问了
   ->买一台高性能的服务器(云服务器->阿里云)，还要给服务器通网线，这样服务器就与一个自己对外访问的外网IP地址(珠峰买的服务器的外网IP：112.125.158.152)

   ->把自己写的博客代码传到服务器上去(FTP上传) ->传到服务器上指定磁盘的某一个目录下

   ->购买一个域名(万网)

   ->域名解析(DNS解析):把我们的域名和服务器的外网IP关联在一起，这样以后输入域名就可以找到服务器了；我们这条关联在一起的解析记录放在DNS服务器上了。

   ->我们还需要在服务器上创建对应的服务(相当于招聘超市服务员)[IIS、Apache、nginx、node...],一台服务器上可能有很多服务，如何区分这些服务呢? 根据端口号区分,每一个服务都有一个自己对应的端口号
     结果：告诉端口号为xxx的服务员负责服务器上哪一个文件夹下的文件管理，例如：我们招聘一个服务员让其负责D:/project 文件下的管理，给它一个端口号叫做80


面试题：
  当用户在自己的浏览器地址栏中(客户端)输入一个网址:http://www.zhufengpeixun.com:80/index.html 到看到整个具体页面，中间都经历了哪些事情?


请求(Request)+响应(Response)=客户端和服务器之间的交互模型，而客户端和服务器端的全部交互信息都可以在谷歌控制台Network选项中查看到

通过在控制台中查看所有的请求，我们发现，第一次把HTML源代码拿回来之后，浏览器自上而下的解析渲染，在渲染过程中如果遇到link、script、img...都有可能会重新的向服务器发送请气，把对应的资源文件中的原代码再通过之前的六步操作给获取到，这样的话，一个页面看完整需要向服务器发送很多次请求才可以...
次数越多越不好，所以前端页面优化的一个黄金法则：“减少HTTP请求次数和大小”(在第一次加载页面的时候我们尽量少发送请求,发送请求越少,请求资源越小，打开速度越快)

思考题：回去后以小组为单位，自己去搜页面优化的技巧...

==========================================
一、NODE
  ->在NODE环境下执行JS，不需要在考虑兼容了，因为NODE是基于V8引擎渲染和解析JS的
  ->我们的JS可以写后台语言了,基于NODE环境运行

  优势:
    ->运行速度快，因为是基于V8引擎运行的
    ->无阻塞的I/O操作 (I/O:文件的输入输出操作,对文件的增删改查) =>提供了一些异步读取和操作文件的方法
    ->基于事件驱动的异步编程模式


  问题:JS可以在客户端浏览器和服务器端的NODE下运行(JS写前端和写后台)，JS在客户端浏览中运行的时候，是否可以对客户端的文件进行操作?
     =>肯定不能，如果能的话，客户端的电脑将受到致命的威胁

     JS在服务器端的NODE下运行，能够操作服务器上的文件呢?
     =>是可以的


  2、我们可以把JS代码在NODE环境下执行?
     ->在WB中，我们打开一个JS文件，在JS文件中直接的执行 'Run xxx.js' 这样就是把这个JS中的代码在NODE环境下执行了 (因为WB中会默认嵌入NODE的运行环境)

     ->在JS所在的目录打开DOS命令(shift+鼠标右键(在此处打开命令窗口))，执行 node xxx.js 这样就把JS代码在NODE环境下执行了

  3、NODE模块
     ->内置模块:NODE天生提供给JS使用的方法都在不同的内置模块中，常用的三个内置模块：http、fs、url...

     ->自定义模块:自己定义的方法都在自定义模块中
       在NODE环境下，新创建的每一个JS都是一个单独独立的模块(A/B)，在A和B中各自写一个fn方法，两个fn是不冲突的

       在B模块中把A模块中的fn执行了?
       首先在A中通过module.exports={fn:fn}把需要供别人调取的方法导出；然后在B中通过require('./A')把模块导入，这样才可以调取A中的fn这个方法；

       作业：回去后定义三个模块A、B、C，在A中写一个方法叫做sum,实现任意数求和；在B中写一个方法叫做avg,实现求平均数(我们需要在B中县调取A中的sum,求和成功后在求平均数)；在C模块中调取B中的avg方法，传递十个值，最后在C中输出平均数...


     ->第三方模块:别人写好的我们来用
        NODE环境下需要使用的第三方模块都在一个网站中呢:https://www.npmjs.com/
        NODE环境下第三方模块的管理统一使用npm命令

        下载:
          我们想把它下载到哪个项目目录下，就在哪个项目目录下打开DOS命令，然后执行: npm install xxx(模块的名称) , 例如：npm install less

        卸载:
          npm uninstall xxx

        npm install/uninstall xxx -g 把模块安装到全局下，这样不管在哪个目录下都可以使用了,但是项目中我们一般都安装到某一个具体的项目下而不是全局
        作业：在全局下执行 npm install less -g 把less安装上，验证是否安装成功，执行 lessc -v 出现版本号代表安装成功


课时134视频过一遍，知道讲什么，不需要看多明白




















